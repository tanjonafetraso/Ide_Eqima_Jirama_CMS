/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframes;

import factory.DAOFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import models.Collaborateur;
import zkfinger.ZKScanner;
import java.io.File;
import javax.swing.DefaultComboBoxModel;
/**
 *
 * @author EQIMA
 */
public class CollaborateurJframe extends javax.swing.JFrame {

    private static CollaborateurJframe instance;
    
    public static CollaborateurJframe getInstance(){
    
        if (instance == null) {
            instance = new CollaborateurJframe();
        }
        
        return instance;
    } 
       
    
    public CollaborateurJframe() {
        initComponents();
        this.setResizableâ€‹(true);
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtNom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtDate_de_naissance = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtType = new javax.swing.JTextField();
        jbEnregistrer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPersonnes = new javax.swing.JTable();
        jbReset = new javax.swing.JButton();
        jbEmpreinte = new javax.swing.JButton();
        jbMenu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtMatricule = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcDoigts = new javax.swing.JComboBox<>();

        String [] doigts = {"Pouce D", "Pouce G", "Index D", "Index G", "Majeur D", "Majeur G", "Annulaire D", "Annulaire G", "Auriculaire D", "Auriculaire G"};
        jcDoigts.setModel(new DefaultComboBoxModel<>(doigts));
        jcDoigts.setSelectedIndex(0);

        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inscription des Collaborateurs");

        jtId.setEditable(false);
        jtId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Nom");

        jtNom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtNom.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtNomInputMethodTextChanged(evt);
            }
        });
        jtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNomActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Date de Naissance");

        jtDate_de_naissance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Type");

        jtType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jbEnregistrer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbEnregistrer.setText("Enregistrer");
        jbEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnregistrerActionPerformed(evt);
            }
        });

        jtPersonnes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Matricule", "Nom", "Date de Naissance", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPersonnes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPersonnesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtPersonnes);

        jbReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbReset.setText("Reset");
        jbReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbResetActionPerformed(evt);
            }
        });

        jbEmpreinte.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbEmpreinte.setText("Voir ses empreintes");
        jbEmpreinte.setEnabled(false);
        jbEmpreinte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEmpreinteActionPerformed(evt);
            }
        });

        jbMenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbMenu.setText("Retour");
        jbMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMenuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Matricule");

        jtMatricule.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtMatricule.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jtMatriculeInputMethodTextChanged(evt);
            }
        });
        jtMatricule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMatriculeActionPerformed(evt);
            }
        });

        jLabel7.setText("Version 1.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcDoigts, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtDate_de_naissance)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jtNom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtId, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel4)
                              .addComponent(jLabel5))
                                .addComponent(jtType))
                            .addComponent(jbReset, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtMatricule, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jbEnregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbEmpreinte, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(634, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(350, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jcDoigts)                
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtMatricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtDate_de_naissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbEnregistrer)
                .addGap(18, 18, 18)
                .addComponent(jbReset)
                .addGap(18, 18, 18)
                .addComponent(jbEmpreinte)
                .addGap(28, 28, 28)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(53, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jbMenu)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNomInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtNomInputMethodTextChanged

    }//GEN-LAST:event_jtNomInputMethodTextChanged

    private void jbEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnregistrerActionPerformed

        Collaborateur personne = null;
        String message = null;
            
        
        if (jtId.getText().trim().equals("")) {
                
            personne = DAOFactory.getCollaborateurDAO().create(

                    new Collaborateur(
                            jtMatricule.getText().trim(),
                            jtNom.getText().trim().toUpperCase(),
                            jtDate_de_naissance.getText().trim().toUpperCase(),
                            jtType.getText().trim()
                    )
            );

            message = personne.toString() + " a Ã©tÃ© enregistrÃ© avec succes !";

        } else {



            personne = DAOFactory.getCollaborateurDAO().update(

                    new Collaborateur(
                            Integer.valueOf(jtId.getText().trim()),
                            jtMatricule.getText().trim(),
                            jtNom.getText().trim().toUpperCase(),
                            jtDate_de_naissance.getText().trim(),
                            jtType.getText().trim()
                            
                    )
            );

            message = personne.toString() + " a Ã©tÃ© modifiÃ© avec succes !";

        }   
        
        if (personne != null) {
            JOptionPane.showMessageDialog(this, message, "Message", JOptionPane.WARNING_MESSAGE);
            showData();
            reset();
        } else {
            JOptionPane.showMessageDialog(this, message, "Erreur pendant l'enregistrement", JOptionPane.WARNING_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_jbEnregistrerActionPerformed

    private void jtPersonnesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPersonnesMouseClicked
       
        File file = new   File("fingerprint.bmp");
        file.delete();
        int index = jtPersonnes.getSelectedRow();
        TableModel model = jtPersonnes.getModel();
        
        int id = Integer.valueOf(model.getValueAt(index, 0).toString());
        
        Collaborateur personne = DAOFactory.getCollaborateurDAO().get(id);
       
        jtId.setText(String.valueOf(personne.getId()));
        jtMatricule.setText(personne.getMatricule());
        jtNom.setText(personne.getNom());
        jtDate_de_naissance.setText(personne.getDate_de_naissance());
        jtType.setText(personne.getType());
        
        System.out.println(ZKScanner.getInstance().isOpenned());
        
        if (ZKScanner.getInstance().isOpenned()) {
            jbEmpreinte.setEnabled(true);
        }
 

    }//GEN-LAST:event_jtPersonnesMouseClicked

    private void jbResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbResetActionPerformed
        reset();
    }//GEN-LAST:event_jbResetActionPerformed

    private void jbEmpreinteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEmpreinteActionPerformed

       if (jtId.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionner une personne dans la table !", "Message", JOptionPane.WARNING_MESSAGE);
        } else {
            
            Collaborateur personne = DAOFactory.getCollaborateurDAO().get(Integer.valueOf(jtId.getText()) );
            if (personne == null) {
                
                JOptionPane.showMessageDialog(this, "l' ID :  " + jtId.getText() + " n'existe pas !", "Message", JOptionPane.WARNING_MESSAGE);
                
            } else {
                
                EmpreinteJFrame.getInstance(personne).showFrame();
                CollaborateurJframe.getInstance().hideFrame();
                
            }
            
        }

    }//GEN-LAST:event_jbEmpreinteActionPerformed

    private void jbMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMenuActionPerformed

        MenuJFrame.getInstance().showFrame();
        CollaborateurJframe.getInstance().hideFrame();

    }//GEN-LAST:event_jbMenuActionPerformed

    private void jtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNomActionPerformed

    private void jtMatriculeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jtMatriculeInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMatriculeInputMethodTextChanged

    private void jtMatriculeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMatriculeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtMatriculeActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEmpreinte;
    private javax.swing.JButton jbEnregistrer;
    private javax.swing.JButton jbMenu;
    private javax.swing.JButton jbReset;
    private javax.swing.JTextField jtDate_de_naissance;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtMatricule;
    private javax.swing.JTextField jtNom;
    private javax.swing.JTable jtPersonnes;
    private javax.swing.JTextField jtType;
    private javax.swing.JComboBox<String> jcDoigts;
    // End of variables declaration//GEN-END:variables

    private void showData(){
        
    
        DefaultTableModel model = (DefaultTableModel) jtPersonnes.getModel();
        
        model.setRowCount(0);
        
        Object [] row = new Object[5];
        
        DAOFactory.getCollaborateurDAO().getAll().stream().map(personne -> {
            row [0] = personne.getId();
            return personne;
        }).map(personne -> {
            row [1] = personne.getMatricule();
            return personne;
        }).map(personne -> {
            row [2] = personne.getNom();
            return personne;
        }).map(personne -> {
            row [3] = personne.getDate_de_naissance();
            return personne;            
        }).map(personne -> {
            row [4] = personne.getType();
            return personne;            
        }).forEachOrdered(_item -> {
            model.addRow(row);
        });
        
    }
    
       private void reset(){
    
        jtId.setText("");
        jtMatricule.setText("");
        jtNom.setText("");
        jtType.setText("");
        jtDate_de_naissance.setText("");
        
        jbEmpreinte.setEnabled(false);
        jbEnregistrer.setEnabled(false);
        
    }
       
    public void showFrame(){
        CollaborateurJframe.getInstance().setVisible(true);
    }
    
    public void hideFrame(){
        CollaborateurJframe.getInstance().setVisible(false);
        CollaborateurJframe.getInstance().reset();
    }

}
