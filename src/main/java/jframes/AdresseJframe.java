/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframes;

import factory.DAOFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import models.Adresse;

/**
 *
 * @author EQIMA
 */
public class AdresseJframe extends javax.swing.JFrame {

    private static AdresseJframe instance;
    
    public static AdresseJframe getInstance(){
    
        if (instance == null) {
            instance = new AdresseJframe();
        }
        
        return instance;
    } 
    
    public AdresseJframe() {
        initComponents();
        this.setResizableâ€‹(true);
        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtMac = new javax.swing.JTextField();
        jbEnregistrer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPersonnes = new javax.swing.JTable();
        jbSupprimer = new javax.swing.JButton();
        jbMenu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adresse Mac");

        jtId.setEditable(false);
        jtId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Adresse MAc");

        jtMac.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jbEnregistrer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbEnregistrer.setText("Enregistrer");
        jbEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnregistrerActionPerformed(evt);
            }
        });

        jtPersonnes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Adresse Mac"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPersonnes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPersonnesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtPersonnes);

        jbSupprimer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbSupprimer.setText("Supprimer");
        jbSupprimer.setEnabled(false);
        jbSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSupprimerActionPerformed(evt);
            }
        });

        jbMenu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbMenu.setText("Retour");
        jbMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMenuActionPerformed(evt);
            }
        });

        jLabel3.setText("Version 1.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtMac)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbEnregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               //.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(634, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                       // .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtMac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbEnregistrer)
                            .addComponent(jbSupprimer))))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(558, Short.MAX_VALUE)
                    .addComponent(jbMenu)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnregistrerActionPerformed

        if (jtMac.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(instance, "Tous les champs doit Ãªtre rempli ", "Message", JOptionPane.WARNING_MESSAGE);
                
        } else {
            
            Adresse adresse = null;
            String message = null;
            
            
            if (jtId.getText().isEmpty()) {
                adresse = new Adresse(jtMac.getText().trim());
            
                adresse = DAOFactory.getAdresseDAO().create(adresse);
                
                message = "Adresse Mac ajoutÃ©";
                
            } else {
                
                adresse = new Adresse(Integer.valueOf(jtId.getText()), jtMac.getText().trim());
            
                adresse = DAOFactory.getAdresseDAO().create(adresse);
                
                message = "Utilisateur modifiÃ©";
                
            }
            
            
            if (adresse == null) {
                JOptionPane.showMessageDialog(instance, "Erreur pendant la Enregistrement, veuillez rÃ©essayer ", "Message", JOptionPane.WARNING_MESSAGE);            
            } else {                                
                JOptionPane.showMessageDialog(instance, message, "Message", JOptionPane.WARNING_MESSAGE); 
                showData();
                reset();
            }
            
        }
    }//GEN-LAST:event_jbEnregistrerActionPerformed

    private void jtPersonnesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPersonnesMouseClicked
       int index = jtPersonnes.getSelectedRow();
        TableModel model = jtPersonnes.getModel();
        
        int id = Integer.parseInt(model.getValueAt(index, 0).toString());
        
        Adresse adresse = DAOFactory.getAdresseDAO().get(id);
        
        jtId.setText(String.valueOf(adresse.getId()));
        jtMac.setText(adresse.getAdresse_mac());
        
        
        jbSupprimer.setEnabled(true);

    }//GEN-LAST:event_jtPersonnesMouseClicked

    private void jbSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSupprimerActionPerformed

     if (jtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionner la utilisateur a supprimÃ© !", "Message", JOptionPane.WARNING_MESSAGE);
        } else {
            
            Adresse adresse = DAOFactory.getAdresseDAO().get(Integer.parseInt(jtId.getText()));
            if (adresse == null) {
                
                JOptionPane.showMessageDialog(this, "l' ID :  " + jtId.getText() + " n'existe pas !", "Message", JOptionPane.WARNING_MESSAGE);
                
            } else {
                
                if (DAOFactory.getAdresseDAO().delete(adresse)) {
                    JOptionPane.showMessageDialog(this, adresse.toString() + " a Ã©tÃ© supprimÃ© !");
                    showData();
                    reset();
                } else {
                    JOptionPane.showMessageDialog(this, "Erreur pendant la suppression de " + adresse.toString(), "Message", JOptionPane.WARNING_MESSAGE);
                }
                
            }
            
        }

    }//GEN-LAST:event_jbSupprimerActionPerformed

    private void jbMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMenuActionPerformed

        MenuAdminJFrame.getInstance().showFrame();
        AdresseJframe.getInstance().hideFrame();
    }//GEN-LAST:event_jbMenuActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEnregistrer;
    private javax.swing.JButton jbMenu;
    private javax.swing.JButton jbSupprimer;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtMac;
    private javax.swing.JTable jtPersonnes;
    // End of variables declaration//GEN-END:variables

    public void showFrame(){
        this.setVisible(true);
    }
    
    public void hideFrame(){
        this.setVisible(false);
    }
    
    
     private void showData(){
    
         DefaultTableModel model = (DefaultTableModel) jtPersonnes.getModel();
        
        model.setRowCount(0);
        
        Object [] row = new Object[4];
        
        for (Adresse adresse : DAOFactory.getAdresseDAO().getAll() ) {
            row [0] = adresse.getId();
            row [1] = adresse.getAdresse_mac();
             model.addRow(row);
        }
    
    }
    
    private void reset(){
    
        jtId.setText("");
        jtMac.setText("");
        
        jbSupprimer.setEnabled(false);
        
    }


}
